// <auto-generated />
using System;
using DATA.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DATA.Migrations
{
    [DbContext(typeof(RecipeContext))]
    [Migration("20210608145146_SeedingTesting3")]
    partial class SeedingTesting3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DATA.Models.IngredientEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c970ddcf-f8a9-464b-9f40-def0e90c54ef"),
                            Name = "chicken stock"
                        },
                        new
                        {
                            Id = new Guid("3ac50384-f899-4914-bde1-0f0cbf2e0ab7"),
                            Name = "frozen peas"
                        },
                        new
                        {
                            Id = new Guid("ce13268c-1055-4034-ac93-d7ab93c39067"),
                            Name = "tarragon leaves"
                        },
                        new
                        {
                            Id = new Guid("6468a759-b665-4898-b5be-7b4891c43d0a"),
                            Name = "salt"
                        },
                        new
                        {
                            Id = new Guid("90070866-d8da-4761-ae22-4dfbd2a979c6"),
                            Name = "pancetta"
                        });
                });

            modelBuilder.Entity("DATA.Models.RecipeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Steps")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ed24b476-1bc6-4bce-9fb6-25a08c6fa629"),
                            Author = "Nigel Slater",
                            Image = "https://imgur.com/2g8nS0W",
                            Name = "Pea soup with pancetta",
                            Steps = "Heat the chicken stock in a saucepan until it is simmering. Add the peas and simmer for 2 minutes, or until just tender. Stir in the tarragon and salt.\n Transfer the mixture to a food processor and blend for a few short blasts to a rough-textured soup. Return the soup to the saucepan and keep warm over a low heat.\n Using a pair of tongs, heat each slice of pancetta over the gas flame of your hob for a few seconds until it crisps up. (Alternatively, preheat your grill to its highest setting, lay the slices of pancetta onto a baking tray and grill for 1-2 minutes, or until crisp.)\n To serve, ladle the soup into bowls. Break the crisp pancetta into pieces and sprinkle on top of the soup."
                        });
                });

            modelBuilder.Entity("DATA.Models.RecipeIngredientEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IngredientEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Quantity")
                        .HasColumnType("float(8)");

                    b.Property<Guid>("RecipeEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IngredientEntityId");

                    b.HasIndex("RecipeEntityId");

                    b.ToTable("RecipeIngredients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0737ad1e-7c67-468f-b56b-99c82c8757e5"),
                            IngredientEntityId = new Guid("c970ddcf-f8a9-464b-9f40-def0e90c54ef"),
                            Quantity = 0f,
                            RecipeEntityId = new Guid("ed24b476-1bc6-4bce-9fb6-25a08c6fa629")
                        },
                        new
                        {
                            Id = new Guid("b9fda1ed-82a3-41a4-83f1-7a39513f8c62"),
                            IngredientEntityId = new Guid("3ac50384-f899-4914-bde1-0f0cbf2e0ab7"),
                            Quantity = 0f,
                            RecipeEntityId = new Guid("ed24b476-1bc6-4bce-9fb6-25a08c6fa629")
                        },
                        new
                        {
                            Id = new Guid("0597362b-c29c-4851-b554-4d11f0f72ed2"),
                            IngredientEntityId = new Guid("ce13268c-1055-4034-ac93-d7ab93c39067"),
                            Quantity = 0f,
                            RecipeEntityId = new Guid("ed24b476-1bc6-4bce-9fb6-25a08c6fa629")
                        },
                        new
                        {
                            Id = new Guid("ea884ee6-eab3-4bcb-97a0-ce4de2415a3d"),
                            IngredientEntityId = new Guid("6468a759-b665-4898-b5be-7b4891c43d0a"),
                            Quantity = 0f,
                            RecipeEntityId = new Guid("ed24b476-1bc6-4bce-9fb6-25a08c6fa629")
                        },
                        new
                        {
                            Id = new Guid("5da5316b-6976-4df0-9666-3ab022b00d6f"),
                            IngredientEntityId = new Guid("90070866-d8da-4761-ae22-4dfbd2a979c6"),
                            Quantity = 0f,
                            RecipeEntityId = new Guid("ed24b476-1bc6-4bce-9fb6-25a08c6fa629")
                        });
                });

            modelBuilder.Entity("DATA.Models.RecipeIngredientEntity", b =>
                {
                    b.HasOne("DATA.Models.IngredientEntity", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DATA.Models.RecipeEntity", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("DATA.Models.IngredientEntity", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("DATA.Models.RecipeEntity", b =>
                {
                    b.Navigation("RecipeIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
